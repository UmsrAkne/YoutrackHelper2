<UserControl
    x:Class="YoutrackHelper2.Views.IssueList"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:YoutrackHelper2.Views.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:YoutrackHelper2.Models"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:viewModels="clr-namespace:YoutrackHelper2.ViewModels"
    xmlns:views="clr-namespace:YoutrackHelper2.Views"
    d:DataContext="{d:DesignInstance viewModels:IssueListViewModel}"
    d:DesignWidth="800"
    Background="{StaticResource ListViewBackgroundColor}"
    IsEnabled="{Binding UiEnabled}"
    mc:Ignorable="d">

    <UserControl.InputBindings>
        <KeyBinding Key="F5" Command="{Binding LoadIssueWrappersAsyncCommand}" />

        <KeyBinding
            Key="I"
            Command="{Binding ShowIssueDetailPageCommand}"
            CommandParameter="{Binding SelectedIssue}"
            Modifiers="Control" />
    </UserControl.InputBindings>

    <UserControl.Style>
        <Style TargetType="UserControl">
            <Style.Triggers>
                <DataTrigger Binding="{Binding UiEnabled}" Value="False">
                    <Setter Property="Opacity" Value="0.4" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>

    <UserControl.Resources>

        <Style TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource ListViewBackgroundColor}" />
            <Setter Property="Foreground" Value="{StaticResource BasicFontColor}" />
        </Style>

        <converters:WorkTypeToStringConverter x:Key="WorkTypeToStringConverter" />

        <ObjectDataProvider
            x:Key="EnumValues"
            MethodName="GetValues"
            ObjectType="{x:Type system:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:WorkType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ControlTemplate x:Key="ToggleButtonTemplate" TargetType="ToggleButton">
            <Border
                Padding="4,2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="3">
                <ContentPresenter />
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value=" Moccasin" />
                </Trigger>

                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value=" PapayaWhip" />
                </Trigger>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="SandyBrown" />
                </Trigger>

                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="GhostWhite" />
                    <Setter Property="BorderBrush" Value="DarkGray" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <converters:DateTimeConverter x:Key="DateTimeConverter" />
        <converters:BoolNegativeConverter x:Key="BoolNegativeConverter" />
        <converters:ShortNameConverter x:Key="ShortNameConverter" />
        <converters:TimeSpanConverter x:Key="TimeSpanConverter" />
        <converters:IssueStatusConverter x:Key="IssueStatusConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0">
            <Menu.Resources>
                <Style TargetType="MenuItem">
                    <Setter Property="FontSize" Value="14" />
                </Style>
            </Menu.Resources>

            <MenuItem
                Background="GhostWhite"
                Command="{Binding NavigateToProjectListCommand}"
                Header="&lt;- Project List" />

            <MenuItem
                Background="GhostWhite"
                Header="お気に入りのプロジェクト"
                ItemsSource="{Binding FavoriteProjects}">

                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Header" Value="{Binding FullName}" />
                        <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Path=DataContext.ChangeProjectCommand}" />
                        <Setter Property="CommandParameter" Value="{Binding}" />
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>

            <MenuItem Header="機能">
                <MenuItem
                    Command="{Binding CopyIssueTitleCommand}"
                    CommandParameter="{Binding ElementName=ListView, Path=SelectedItem}"
                    Header="課題のタイトルをコピー"
                    InputGestureText="Ctrl+C" />

                <MenuItem
                    Command="{Binding LoadIssueWrappersAsyncCommand}"
                    Header="リロード"
                    InputGestureText="F5" />
            </MenuItem>

            <MenuItem Header="表示">
                <MenuItem Command="{Binding ShowIssuesPostPageCommand}" Header="複数の課題を投稿" />
                <MenuItem
                    Command="{Binding ShowIssueDetailPageCommand}"
                    CommandParameter="{Binding SelectedIssue}"
                    Header="課題の詳細画面を表示"
                    InputGestureText="Ctrl+I" />
                <MenuItem Command="{Binding CollapsedAllIssueCommand}" Header="全ての課題を折りたたむ" />

                <MenuItem Command="{Binding OpenLogFileCommand}" Header="ログファイルを表示" />

            </MenuItem>

            <MenuItem Header="ソート">
                <MenuItem
                    Command="{Binding ChangeSortCriteriaCommand}"
                    CommandParameter="{x:Static models:SortCriteria.Id}"
                    Header="ID" />

                <MenuItem
                    Command="{Binding ChangeSortCriteriaCommand}"
                    CommandParameter="{x:Static models:SortCriteria.Date}"
                    Header="日付" />

                <MenuItem
                    Command="{Binding ChangeSortCriteriaCommand}"
                    CommandParameter="{x:Static models:SortCriteria.Alphabetical}"
                    Header="アルファベット" />
            </MenuItem>

            <MenuItem Header="課題">
                <MenuItem
                    Command="{Binding InputIssueInfoCommand}"
                    Header="課題の情報を複製"
                    IsEnabled="{Binding HasSelectedItem}" />

                <MenuItem
                    Command="{Binding CreateNumberedIssueCommand}"
                    Header="課題を連番で複製する"
                    IsEnabled="{Binding HasSelectedItem}" />

                <MenuItem
                    Command="{Binding CreateGlobalNumberedIssueCommand}"
                    Header="課題を連番で複製する(グローバル)"
                    IsEnabled="{Binding HasSelectedItem}">
                    <MenuItem.CommandParameter>
                        <system:Boolean>True</system:Boolean>
                    </MenuItem.CommandParameter>
                </MenuItem>

                <MenuItem
                    Command="{Binding CompleteIssueCommand}"
                    CommandParameter="{Binding ElementName=ListView, Path=SelectedItem}"
                    Header="選択中の課題を完了する"
                    InputGestureText="Ctrl+Shift+F"
                    IsEnabled="{Binding HasSelectedItem}" />

                <MenuItem
                    Command="{Binding CompleteIssueListCommand}"
                    CommandParameter="{Binding ElementName=ListView, Path=SelectedItem}"
                    Header="選択中の課題を一括完了する" />

                <MenuItem
                    Command="{Binding ToObsoleteCommand}"
                    Header="選択中の課題を廃止にする"
                    IsEnabled="{Binding HasSelectedItem}" />

                <MenuItem Command="{Binding RevertToIncompleteAsyncCommand}" Header="選択中の課題を未完了にする" />

                <!--  誤って押すと取り返しがつかないので、一段深い場所に実行ボタンを設置する  -->
                <MenuItem Header="削除">

                    <MenuItem Command="{Binding DeleteIssueListAsyncCommand}" Header="選択中の課題を削除する" />
                </MenuItem>
            </MenuItem>
        </Menu>

        <DockPanel Grid.Row="1">
            <DockPanel.Style>
                <Style TargetType="DockPanel">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding TotalWorkingDuration.Ticks}" Value="0" />
                    </Style.Triggers>
                </Style>
            </DockPanel.Style>

            <Button
                Margin="3"
                Padding="3,0"
                Command="{Binding CreateGlobalNumberedIssueCommand}"
                IsEnabled="{Binding HasSelectedItem}"
                Template="{StaticResource ButtonCustomTemplate}">
                <Button.Content>
                    <TextBlock FontSize="{StaticResource BasicFontsize}" Text="連番課題複製(Global)" />
                </Button.Content>
                <Button.CommandParameter>
                    <system:Boolean>False</system:Boolean>
                </Button.CommandParameter>
            </Button>

            <TextBlock
                Margin="4,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                FontSize="{StaticResource BasicFontsize}"
                Foreground="{StaticResource BasicFontColor}"
                Text="{Binding TotalWorkingDuration, Converter={StaticResource TimeSpanConverter}, StringFormat=　総作業時間 {0}}" />
        </DockPanel>

        <!--  課題リストを表示する部分  -->
        <ScrollViewer Grid.Row="2">
            <ListView
                x:Name="ListView"
                HorizontalContentAlignment="Stretch"
                AlternationCount="2"
                ItemsSource="{Binding IssueWrappers}"
                SelectedItem="{Binding SelectedIssue}">
                <ListView.InputBindings>

                    <KeyBinding
                        Key="C"
                        Command="{Binding CopyIssueTitleCommand}"
                        CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                        Modifiers="Control" />

                    <KeyBinding
                        Key="F"
                        Command="{Binding CompleteIssueCommand}"
                        CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                        Modifiers="Control+Shift" />
                </ListView.InputBindings>

                <!--  ListView が無効状態の時、背景色が白になってしまうのを防ぐためにテンプレートを設定している  -->
                <ListView.Template>
                    <ControlTemplate TargetType="ListView">
                        <Border
                            x:Name="border"
                            Background="{StaticResource ListViewBackgroundColor}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ItemsPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch" />
                        </Border>
                    </ControlTemplate>
                </ListView.Template>

                <ListView.ItemTemplate>
                    <DataTemplate>
                        <DataTemplate.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="FontSize" Value="{StaticResource BasicFontsize}" />
                                <Setter Property="Foreground" Value="{StaticResource BasicFontColor}" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataTemplate.Resources>

                        <ContentControl>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding ToggleExpandedCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <Border Padding="3,0">
                                <Grid>

                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <StackPanel
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        Orientation="Horizontal">

                                        <CheckBox
                                            Margin="3,0"
                                            VerticalAlignment="Center"
                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}, Path=DataContext.CompleteIssueCommand}"
                                            CommandParameter="{Binding}"
                                            IsChecked="{Binding Completed}"
                                            IsEnabled="{Binding Completed, Converter={StaticResource BoolNegativeConverter}}" />
                                        <TextBlock Text="{Binding Title}">
                                            <TextBlock.Style>
                                                <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Completed}" Value="True">
                                                            <Setter Property="Opacity" Value="0.4" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <Button
                                            Margin="6,0"
                                            Padding="4,0"
                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}, Path=DataContext.ShowIssueDetailPageCommand}"
                                            CommandParameter="{Binding}"
                                            Content="Edit"
                                            Template="{StaticResource ButtonCustomTemplate}" />

                                    </StackPanel>

                                    <StackPanel
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Orientation="Horizontal">

                                        <ItemsControl
                                            Margin="3,0"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            ItemTemplate="{StaticResource TagListDataTemplate}"
                                            ItemsSource="{Binding Tags}">

                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Horizontal" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>

                                        </ItemsControl>

                                        <Border
                                            Width="50"
                                            Margin="3,2"
                                            BorderBrush="DimGray"
                                            BorderThickness="1,0"
                                            CornerRadius="4">

                                            <TextBlock
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Text="{Binding WorkType, Converter={StaticResource WorkTypeToStringConverter}}" />

                                        </Border>

                                        <TextBlock
                                            Margin="3,0"
                                            HorizontalAlignment="Right"
                                            Text="{Binding ShortName, Converter={StaticResource ShortNameConverter}}" />

                                        <ToggleButton
                                            Width="70"
                                            Margin="5,0"
                                            HorizontalContentAlignment="Center"
                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}, Path=DataContext.ToggleIssueStateCommand}"
                                            CommandParameter="{Binding}"
                                            Template="{StaticResource ToggleButtonTemplate}">

                                            <ToggleButton.Style>
                                                <Style TargetType="ToggleButton">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Completed}" Value="True">
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>

                                                        <DataTrigger Binding="{Binding Progressing}" Value="True">
                                                            <Setter Property="Background" Value="Orange" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ToggleButton.Style>

                                            <TextBlock
                                                FontSize="12"
                                                Foreground="Black"
                                                Text="{Binding Self, Converter={StaticResource IssueStatusConverter}}"
                                                TextAlignment="Center" />
                                        </ToggleButton>

                                        <ToggleButton
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}, Path=DataContext.LoadChangeHistoriesAsyncCommand}"
                                            CommandParameter="{Binding}"
                                            IsChecked="{Binding Expanded}"
                                            Template="{StaticResource ToggleButtonTemplate}">

                                            <Border
                                                Padding="4,0"
                                                VerticalAlignment="Center"
                                                Background="LightCoral"
                                                CornerRadius="6">
                                                <TextBlock Padding="2,1" FontSize="12">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Expanded}" Value="True">
                                                                    <Setter Property="Text" Value="▲" />
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding Expanded}" Value="False">
                                                                    <Setter Property="Text" Value="▼" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Border>
                                        </ToggleButton>

                                    </StackPanel>

                                    <!--  ここからデフォルトでは隠れている詳細情報欄  クリックで開閉する  -->
                                    <StackPanel
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Margin="21,0,0,0">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Expanded}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding Expanded}" Value="False">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>

                                        <TextBlock Text="{Binding Description}">
                                            <TextBlock.Style>
                                                <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <Trigger Property="Text" Value="">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">

                                            <TextBlock
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Bottom"
                                                Text="{Binding CreationDateTime, Converter={StaticResource DateTimeConverter}, StringFormat=作成日時 : {0}}" />

                                            <TextBlock
                                                Margin="4,0,0,0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Bottom"
                                                Text="{Binding Resolved, Converter={StaticResource DateTimeConverter}, StringFormat=/ 完了日時 : {0}}">
                                                <TextBlock.Style>
                                                    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Completed}" Value="False">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>

                                        </StackPanel>

                                        <!--  コメントを入力するためのテキストボックス  -->
                                        <TextBox
                                            Margin="0,2"
                                            AcceptsReturn="True"
                                            Text="{Binding TemporaryComment, UpdateSourceTrigger=PropertyChanged}">

                                            <TextBox.InputBindings>
                                                <KeyBinding
                                                    Key="Enter"
                                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}, Path=DataContext.PostCommentCommand}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=TextBox}}"
                                                    Modifiers="Control" />
                                            </TextBox.InputBindings>
                                        </TextBox>

                                        <ItemsControl
                                            Margin="0,8"
                                            Padding="0"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            ItemsSource="{Binding Comments}">

                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate DataType="{x:Type models:Comment}">
                                                    <DataTemplate.Resources>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="FontSize" Value="{StaticResource BasicFontsize}" />
                                                            <Setter Property="Foreground" Value="{StaticResource BasicFontColor}" />
                                                        </Style>
                                                    </DataTemplate.Resources>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="{Binding Text}" />
                                                        <Border Width="0" Margin="4,0" />
                                                        <TextBlock Text="{Binding DateTime, StringFormat=({0}), Converter={StaticResource DateTimeConverter}}" />
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>

                                        </ItemsControl>
                                    </StackPanel>
                                </Grid>

                            </Border>
                        </ContentControl>
                    </DataTemplate>
                </ListView.ItemTemplate>

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Style.Triggers>

                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="{StaticResource ListViewLightBackgroundColor}" />
                            </Trigger>

                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" Value="{StaticResource SelectionBackgroundColor}" />
                            </Trigger>
                        </Style.Triggers>

                        <Style.Setters>
                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <Border
                                            x:Name="Border"
                                            Padding="3,1"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="2">

                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style.Setters>

                    </Style>
                </ListView.ItemContainerStyle>

            </ListView>
        </ScrollViewer>

        <StackPanel Grid.Row="3">

            <StackPanel.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="{StaticResource BasicFontColor}" />
                </Style>
            </StackPanel.Resources>

            <StackPanel.InputBindings>
                <KeyBinding
                    Key="Enter"
                    Command="{Binding CreateIssueAsyncCommand}"
                    CommandParameter="{Binding ElementName=NewIssueTitleTextBox}"
                    Modifiers="Control+Shift" />
            </StackPanel.InputBindings>

            <DockPanel Margin="2">
                <TextBlock Width="80" Text="Command :" />
                <TextBox x:Name="CommandTextBox" Text="{Binding CommandText, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding
                            Key="Enter"
                            Command="{Binding CreateIssueFromStrAsyncCommand}"
                            CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=TextBox}}"
                            Modifiers="Control+Shift" />
                    </TextBox.InputBindings>
                </TextBox>
            </DockPanel>

            <DockPanel Margin="2">
                <TextBlock Width="80" Text="Title :" />
                <TextBox x:Name="NewIssueTitleTextBox" Text="{Binding CurrentIssueWrapper.Title, UpdateSourceTrigger=PropertyChanged}" />
            </DockPanel>

            <DockPanel Margin="2">
                <TextBlock Width="80" Text="Description :" />

                <!--  投稿する課題の説明を入力するテキストボックス  -->
                <TextBox AcceptsReturn="True" Text="{Binding CurrentIssueWrapper.Description, UpdateSourceTrigger=PropertyChanged}" />
            </DockPanel>

            <DockPanel Margin="2">
                <TextBlock Width="80" Text="Work Type :" />
                <ComboBox
                    Width="180"
                    HorizontalAlignment="Left"
                    ItemsSource="{Binding Source={StaticResource EnumValues}}"
                    SelectedIndex="0"
                    SelectedItem="{Binding CurrentIssueWrapper.WorkType}">
                    <ComboBox.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="Black" />
                        </Style>
                    </ComboBox.Resources>
                </ComboBox>

                <Border Margin="10,0" />

                <TextBlock Padding="3,0" Text="Tag : " />
                <TextBox DockPanel.Dock="Right" Text="{Binding TagText, UpdateSourceTrigger=PropertyChanged}" />

            </DockPanel>

            <StackPanel
                Margin="0,2"
                HorizontalAlignment="Right"
                Orientation="Horizontal">

                <Button
                    Width="250"
                    Margin="5,0"
                    Command="{Binding CreateIssueAsyncCommand}"
                    Content="Create new Issue (Ctrl + Shift + Enter)"
                    Template="{StaticResource ButtonCustomTemplate}" />

            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>